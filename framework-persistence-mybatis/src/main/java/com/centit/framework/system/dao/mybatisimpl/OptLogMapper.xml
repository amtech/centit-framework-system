<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.centit.framework.system.dao.mybatisimpl.OptLogDao">
    <resultMap type="com.centit.framework.system.po.OptLog" id="OptLog">
        <result property="logId" column="LOG_ID" />
        <result property="logLevel" column="LOG_LEVEL" />
        <result property="userCode" column="USER_CODE" />
        <result property="optTime" column="OPT_TIME" />
        <result property="optId" column="OPT_ID" />
        <result property="optTag" column="OPT_TAG" />
        <result property="optMethod" column="OPT_METHOD" />
        <result property="optContent" column="OPT_CONTENT" />
        <result property="newValue" column="NEW_VALUE" />
        <result property="oldValue" column="OLD_VALUE" />
    </resultMap>

    <!-- 查询条件 -->
    <sql id="condition" databaseId="oracle">
        <if test="logId != null  and logId != ''  ">
            and u.LOG_ID = #{logId}
        </if>
        <if test="logLevel != null  and logLevel != ''  ">
            and u.LOG_LEVEL like '%'|| #{logLevel}||'%'
        </if>
        <if test="userCode != null  and userCode != ''  ">
            and u.USER_CODE = #{userCode}
        </if>
        <if test="optTimeBegin != null  and optTimeBegin != ''  ">
            and u.OPT_TIME >= to_date(#{optTimeBegin},'yyyy-mm-dd')
        </if>
        <if test="optTimeEnd != null  and optTimeEnd != ''  ">
            and u.OPT_TIME <![CDATA[<= ]]> to_date(#{optTimeEnd},'yyyy-mm-dd')+1
        </if>

        <if test="optCode != null  and optCode != ''  ">
            and u.OPT_CODE like '%'|| #{optCode}||'%'
        </if>
        <if test="optContent != null  and optContent != ''  ">
            and u.OPT_CONTENT like '%'|| #{optContent}||'%'
        </if>
        <if test="oldValue != null  and oldValue != ''  ">
            and u.OLD_VALUE like '%'|| #{oldValue}||'%'
        </if>
        <if test="optMethod != null  and optMethod != ''  ">
            and u.OPT_METHOD like '%'|| #{optMethod}||'%'
        </if>
        <if test="optId != null  and optId != ''  ">
            and u.OPT_ID = #{optId}
        </if>
    </sql>

    <sql id="condition" databaseId="mysql">
        <if test="logId != null  and logId != ''  ">
            and u.LOG_ID = #{logId}
        </if>
        <if test="logLevel != null  and logLevel != ''  ">
            and u.LOG_LEVEL like concat('%', #{logLevel}, '%')
        </if>
        <if test="userCode != null  and userCode != ''  ">
            and u.USER_CODE = #{userCode}
        </if>
        <if test="optTimeBegin != null  and optTimeBegin != ''  ">
            and u.OPT_TIME >= str_to_date(#{optTimeBegin},'%Y-%m-%d')
        </if>
        <if test="optTimeEnd != null  and optTimeEnd != ''  ">
            and u.OPT_TIME <![CDATA[<= ]]> date_sub(str_to_date(#{optTimeEnd},'%Y-%m-%d'),INTERVAL -1 DAY)
        </if>
        <if test="optId != null  and optId != ''  ">
            and u.OPT_ID like concat('%', #{optId}, '%')
        </if>
        <if test="optCode != null  and optCode != ''  ">
            and u.OPT_CODE like concat('%', #{optCode}, '%')
        </if>
        <if test="optContent != null  and optContent != ''  ">
            and u.OPT_CONTENT like concat('%', #{optContent}, '%')
        </if>
        <if test="oldValue != null  and oldValue != ''  ">
            and u.OLD_VALUE like concat('%', #{oldValue}, '%')
        </if>
        <if test="optMethod != null  and optMethod != ''  ">
            and u.OPT_METHOD like concat('%', #{optMethod}, '%')
        </if>
        <if test="optId != null  and optId != ''  ">
            and u.OPT_ID in ( #{optId} )
        </if>
    </sql>

    <sql id="condition" databaseId="h2">
        <if test="logId != null  and logId != ''  ">
            and u.LOG_ID = #{logId}
        </if>
        <if test="logLevel != null  and logLevel != ''  ">
            and u.LOG_LEVEL like concat('%', #{logLevel}, '%')
        </if>
        <if test="userCode != null  and userCode != ''  ">
            and u.USER_CODE = #{userCode}
        </if>
        <if test="optTimeBegin != null  and optTimeBegin != ''  ">
            and u.OPT_TIME >= str_to_date(#{optTimeBegin},'%Y-%m-%d')
        </if>
        <if test="optTimeEnd != null  and optTimeEnd != ''  ">
            and u.OPT_TIME <![CDATA[<= ]]> date_sub(str_to_date(#{optTimeEnd},'%Y-%m-%d'),INTERVAL -1 DAY)
        </if>

        <if test="optCode != null  and optCode != ''  ">
            and u.OPT_CODE like concat('%', #{optCode}, '%')
        </if>
        <if test="optContent != null  and optContent != ''  ">
            and u.OPT_CONTENT like concat('%', #{optContent}, '%')
        </if>
        <if test="oldValue != null  and oldValue != ''  ">
            and u.OLD_VALUE like concat('%', #{oldValue}, '%')
        </if>
        <if test="optMethod != null  and optMethod != ''  ">
            and u.OPT_METHOD like concat('%', #{optMethod}, '%')
        </if>
        <if test="optId != null  and optId != ''  ">
            and u.OPT_ID = #{optId}
        </if>
    </sql>

    <!-- 查询核心SQL -->
    <sql id="coreSql"><![CDATA[ select u.LOG_ID,
                   u.LOG_LEVEL,
                   u.USER_CODE,
                   u.OPT_TIME,
                   u.OPT_ID,
                   u.OPT_TAG,
                   u.OPT_METHOD,
                   u.OPT_CONTENT,
                   u.NEW_VALUE,
                   u.OLD_VALUE
            from F_OPT_LOG u ]]></sql>

    <!--分页计数 -->
    <select id="pageCount" parameterType="map" resultType="int">
        <![CDATA[
            select count(0) cnt
            from  F_OPT_LOG u
        ]]>
        <where>
            <include refid="condition" />
        </where>
    </select>

    <!--分页查询 -->
    <!--<select id="pageQuery" parameterType="map" resultMap="OptLog">
        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageBegin" />
        <include refid="coreSql" />
        <where>
            <include refid="condition" />
        </where>
        <if test="mybatisOrderBy != null and mybatisOrderBy != '' ">
            order by ${mybatisOrderBy}
        </if>

        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageEnd" />
    </select>

    <select id="pageQueryByPDSql" parameterType="map" resultMap="OptLog">
        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageBeginByPDSql" />
        <include refid="coreSql" />
        where 1=1 [ :logId | and u.LOG_ID = :logId ]
        [ :(like)logLevel | and u.LOG_LEVEL like :logLevel]
        [ :userCode | and u.USER_CODE = :userCode]
        [ :(date)optTimeBegin | and u.OPT_TIME >= :optTimeBegin]
        [ :(nextday)optTimeEnd | and u.OPT_TIME <![CDATA[<= ]]> :optTimeEnd]
        [ :optId | and u.OPT_ID in (:optId)]
        [ :optCode | and u.OPT_CODE = :optCode]
        [ :(like)optContent | and u.OPT_CONTENT :optContent]
        [ :(like)oldValue| and u.OLD_VALUE like :oldValue]
        [ :(like)optMethod| and u.OPT_METHOD like :optMethod]
        [ :(INPLACE)mybatisOrderBy | order by :mybatisOrderBy]
        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageEndByPDSql" />
    </select>-->

    <select id="pageQuery" parameterType="map" resultMap="OptLog">
        /* parameter driver sql */
        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageBeginByPDSql" />
        <include refid="coreSql" />
        where 1=1 [ :logId | and u.LOG_ID = :logId ]
        [ :(like)logLevel | and u.LOG_LEVEL like :logLevel]
        [ :userCode | and u.USER_CODE = :userCode]
        [ :(date)optTimeBegin | and u.OPT_TIME >= :optTimeBegin]
        [ :(nextday)optTimeEnd | and u.OPT_TIME <![CDATA[<= ]]> :optTimeEnd]
        [ :optId | and u.OPT_ID in (:optId)]
        [ :optCode | and u.OPT_CODE = :optCode]
        [ :(like)optContent | and u.OPT_CONTENT :optContent]
        [ :(like)oldValue| and u.OLD_VALUE like :oldValue]
        [ :(like)optMethod| and u.OPT_METHOD like :optMethod]
        [ :(INPLACE)mybatisOrderBy | order by :mybatisOrderBy]
        <include refid="com.centit.framework.mybatis.dao.BaseDao.pageEndByPDSql" />
    </select>
    <!--分页查询结束 -->

    <!--查询单条记录ById -->
    <select id="getObjectById" parameterType="Long" resultMap="OptLog">
        <include refid="coreSql" />
        <where>
            <![CDATA[
                u.LOG_ID=#{logId}
            ]]>
        </where>
    </select>
    <!--查询单条记录 结束 -->

    <!--插入新单据 start -->
    <sql id="insertSql">
        (
            LOG_ID,
            LOG_LEVEL,
            USER_CODE,
            OPT_TIME,
            OPT_ID,
            OPT_TAG,
            OPT_METHOD,
            OPT_CONTENT,
            NEW_VALUE,
            OLD_VALUE
        )values(
            #{logId},
            #{logLevel},
            #{userCode},
            #{optTime},
            #{optId},
            #{optTag,jdbcType=VARCHAR},
            #{optMethod,jdbcType=VARCHAR},
            #{optContent,jdbcType=VARCHAR},
            #{newValue,jdbcType=VARCHAR},
            #{oldValue,jdbcType=VARCHAR}
        )
    </sql>

    <insert id="saveNewObject" parameterType="com.centit.framework.system.po.OptLog">
        insert into F_OPT_LOG
        <include refid="insertSql" />
    </insert>
    <!--插入新单据 end -->

    <!--更新单据 start -->
    <sql id="updSql">
        <set>
            <if test="logLevel !=null ">
                LOG_LEVEL = #{logLevel},
            </if>
            <if test="userCode !=null ">
                USER_CODE = #{userCode},
            </if>
            <if test="optTime !=null ">
                OPT_TIME = #{optTime},
            </if>
            <if test="optId !=null ">
                OPT_ID = #{optId},
            </if>
            <if test="optTag !=null ">
                OPT_TAG = #{optTag},
            </if>
            <if test="optMethod !=null ">
                OPT_METHOD = #{optMethod},
            </if>
            <if test="optContent !=null ">
                OPT_CONTENT = #{optContent},
            </if>
            <if test="isInToolbar!=null ">
                IS_IN_TOOLBAR = #{isInToolbar},
            </if>
            <if test="newValue !=null ">
                NEW_VALUE = #{newValue},
            </if>
            <if test="oldValue !=null ">
                OLD_VALUE = #{oldValue},
            </if>
        </set>
    </sql>
    <update id="update" parameterType="com.centit.framework.system.po.OptLog" timeout="2000">
        update F_OPT_LOG
        <include refid="updSql" />
        where LOG_ID=#{logId}
    </update>
    <!--更新单据 end -->

    <!--Merge单据 start -->
    <update id="mergeOptLog" databaseId="oracle" parameterType="com.centit.framework.system.po.OptLog" timeout="2000">
        merge into F_OPT_LOG t
        using ( select #{logId} as LOG_ID from dual) t1
        on(t.LOG_ID = t1.LOG_ID)
        when not matched then
        insert
        <include refid="insertSql" />
        when matched then
        update
        <include refid="updSql" />
        where LOG_ID=#{logId}
    </update>

    <update id="mergeOptLog" databaseId="mysql" parameterType="com.centit.framework.system.po.OptLog" timeout="2000">
        replace into F_OPT_LOG
        <include refid="insertSql" />
    </update>

    <update id="mergeOptLog" databaseId="h2" parameterType="com.centit.framework.system.po.OptLog" timeout="2000">
        replace into F_OPT_LOG
        <include refid="insertSql" />
    </update>
    <!--Merge单据 end -->

    <!--删除记录  -->
    <delete id="deleteObjectById" parameterType="Long" timeout="2000">
        <![CDATA[
            delete from F_OPT_LOG where LOG_ID=#{logId}
        ]]>
    </delete>

    <delete id="delete" parameterType="map" timeout="2000">
        <![CDATA[
            delete from F_OPT_LOG where OPT_TIME > #{beginDate} and OPT_TIME < #{endDate}
        ]]>
    </delete>
    <!--删除记录 结束 -->

    <select id="createNewLogId" databaseId="oracle" resultType="Long">
        select S_SYS_LOG.nextval from dual
    </select>

    <select id="createNewLogId" databaseId="mysql" resultType="Long">
        select sequence_nextval('S_SYS_LOG')
    </select>

    <select id="createNewLogId" databaseId="h2" resultType="Long">
        select NEXT VALUE FOR S_SYS_LOG
    </select>

    <select id="listOptIds" resultType="String">
        select DISTINCT f.OPT_ID from F_OPT_LOG f
    </select>

</mapper>
